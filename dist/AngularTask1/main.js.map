{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/card/card.component.html","./src/app/card/card.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<section class=\"pricing py-5\">\r\n<div class=\"container \" >\r\n    <div class=\"row\">\r\n       <div class=\"col-lg-4 mt-5\" *ngFor=\"let card of cards\">\r\n            <app-card [myData]=\"card\"></app-card>\r\n            \r\n        </div>\r\n    </div>\r\n</div>\r\n</section>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\n\nexport class AppComponent {\n  title = 'AngularTask1';\n\n  cards=[\n    {\n      plan:\"FREE\",\n      price:0,\n      user:\"Single User\",\n      storage:5,\n      publicProjects:true,\n      communityAccess:true,\n      privateProjects:false,\n      phoneSupport:false,\n      freeSubdomain:false,\n      monthlyReport:false\n    },\n    {\n      plan:\"PLUS\",\n      price:9,\n      user:\"5 Users\",\n      storage:50,\n      publicProjects:true,\n      communityAccess:true,\n      privateProjects:true,\n      phoneSupport:true,\n      freeSubdomain:true,\n      monthlyReport:false\n    },\n    {\n      plan:\"PRO\",\n      price:49,\n      user:\"Unlimited Users\",\n      storage:150,\n      publicProjects:true,\n      communityAccess:true,\n      privateProjects:true,\n      phoneSupport:true,\n      freeSubdomain:true,\n      monthlyReport:true\n    }\n  ]\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CardComponent } from './card/card.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","          \r\n                <div class=\"card mb-5 mb-lg-0  m-4 \">\r\n                  <div class=\"card-body\">\r\n                    <h5 class=\"card-title text-muted text-uppercase text-center\">{{ myData.plan }}</h5>\r\n                    <h6 class=\"card-price text-center\"><span class=\"price\">${{myData.price}}</span><span class=\"period\">/month</span></h6>\r\n                    <hr>\r\n                    <ul class=\"fa-ul list-unstyled\">\r\n                      <li [ngClass]=\"{'textBold':myData.plan=='PLUS' || myData.plan=='PRO'}\"> <span> &#10004;</span> {{myData.user}} </li>\r\n                      <li><span> &#10004;</span>{{myData.storage}} GB Storage</li>\r\n                      <li><span> &#10004;</span>Unlimited Public Projects</li>\r\n                      <li><span> &#10004;</span> Community Access</li>\r\n                      <li class=\"\" [ngClass]=\"{'reject':myData.privateProjects==false}\"><span *ngIf=\"myData.privateProjects==false\">&#10006;</span>\r\n                        <span *ngIf=\"myData.privateProjects==true\">&#10004;</span>\r\n                        Unlimited Private Projects</li>\r\n                        \r\n                      <li class=\"\" [ngClass]=\"{'reject':myData.phoneSupport==false}\"><span *ngIf=\"myData.phoneSupport==false\">&#10006;</span>\r\n                        <span *ngIf=\"myData.phoneSupport==true\">&#10004;</span>\r\n                        Dedicated Phone Support</li>\r\n                      <li class=\"\" [ngClass]=\"{'reject':myData.freeSubdomain==false}\"><span *ngIf=\"myData.phoneSupport==false\">&#10006;</span>\r\n                        <span *ngIf=\"myData.phoneSupport==true\">&#10004;</span>\r\n                        \r\n                      <span *ngIf=\"myData.plan=='PRO'\"> <b>Unlimited</b></span>  Free Subdomain\r\n                      </li>\r\n                      <li class=\"\" [ngClass]=\"{'reject':myData.monthlyReport==false}\">\r\n                        <span *ngIf=\"myData.monthlyReport==false\">&#10006;</span>\r\n                        <span *ngIf=\"myData.monthlyReport==true\">&#10004;</span>\r\n                        Monthly Status Reports</li>\r\n                    </ul>\r\n                    <div class=\"d-grid\">\r\n                      <a href=\"#\" class=\"btn btn-primary text-uppercase\">Button</a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n             \r\n      \r\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n\n\n  @Input() myData={\n    plan:\"FREE\",\n    price:0,\n    user:\"Single User\",\n    storage:5,\n    publicProjects:true,\n    communityAccess:true,\n    privateProjects:false,\n    phoneSupport:false,\n    freeSubdomain:true,\n    monthlyReport:false\n  };\n\n  constructor() { \n    \n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}